import random
import string

from custom_value_list.common_string import common_strings
from custom_value_list.id import ids
from custom_value_list.description import descriptions
from custom_value_list.name import names
from custom_value_list.time_zone import time_zones
from custom_value_list.area import areas
from custom_value_list.location import locations
from custom_value_list.region import regions
from custom_value_list.url import urls
from custom_value_list.language import languages
from custom_value_list.media_type import media_types
from custom_value_list.color import colors
from custom_value_list.email import emails
from custom_value_list.query import queries
from custom_value_list.path import paths
from custom_value_list.domain import domains
from custom_value_list.token import tokens
from custom_value_list.category import categories
from custom_value_list.ip import ips
from custom_value_list.string_datetime import string_datetimes
from custom_value_list.string_date import string_dates

random_seed = 0
# random_seed=time.time()
print(f"Value generator random seed: {random_seed}")
random.seed(random_seed)

EXAMPLE_ARG = "examples"


def gen_restler_fuzzable_string(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)


def placeholder_value_generator():
    while True:
        yield str(random.randint(-10, 10))
        yield ''.join(random.choices(string.ascii_letters + string.digits, k=1))


def gen_restler_fuzzable_string_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_id(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in ids:
            yield ''.join(i)


def gen_restler_fuzzable_id_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_name(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in names:
            yield ''.join(i)


def gen_restler_fuzzable_name_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_description(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in descriptions:
            yield ''.join(i)


def gen_restler_fuzzable_description_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_time_zone(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in time_zones:
            yield ''.join(i)


def gen_restler_fuzzable_time_zone_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_area(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in areas:
            yield ''.join(i)


def gen_restler_fuzzable_area_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_location(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in locations:
            yield ''.join(i)


def gen_restler_fuzzable_location_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_region(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in regions:
            yield ''.join(i)


def gen_restler_fuzzable_region_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_url(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in urls:
            yield ''.join(i)


def gen_restler_fuzzable_url_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_language(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in languages:
            yield ''.join(i)


def gen_restler_fuzzable_language_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_media_type(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in media_types:
            yield ''.join(i)


def gen_restler_fuzzable_media_type_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_color(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in colors:
            yield ''.join(i)


def gen_restler_fuzzable_color_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_email(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in emails:
            yield ''.join(i)


def gen_restler_fuzzable_email_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_query(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in queries:
            yield ''.join(i)


def gen_restler_fuzzable_query_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_path(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in paths:
            yield ''.join(i)


def gen_restler_fuzzable_path_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_domain(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in domains:
            yield ''.join(i)


def gen_restler_fuzzable_domain_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_token(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in tokens:
            yield ''.join(i)


def gen_restler_fuzzable_token_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_category(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in categories:
            yield ''.join(i)


def gen_restler_fuzzable_category_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_ip(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in ips:
            yield ''.join(i)


def gen_restler_fuzzable_ip_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_string_datetime(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in string_datetimes:
            yield ''.join(i)


def gen_restler_fuzzable_string_datetime_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_string_date(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    while True:
        for i in common_strings:
            yield ''.join(i)
        for i in string_dates:
            yield ''.join(i)


def gen_restler_fuzzable_string_date_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_datetime(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_datetime_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_date(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_date_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_uuid4(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_uuid4_unquoted(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_int(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_number(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_bool(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


def gen_restler_fuzzable_object(**kwargs):
    example_value = None
    if EXAMPLE_ARG in kwargs:
        example_value = kwargs[EXAMPLE_ARG]

    # Add logic here to generate values
    return placeholder_value_generator()


value_generators = {
    "restler_fuzzable_string": gen_restler_fuzzable_string,
    "restler_fuzzable_string_unquoted": None,
    "restler_fuzzable_id": gen_restler_fuzzable_id,
    "restler_fuzzable_id_unquoted": None,
    "restler_fuzzable_name": gen_restler_fuzzable_name,
    "restler_fuzzable_name_unquoted": None,
    "restler_fuzzable_description": gen_restler_fuzzable_description,
    "restler_fuzzable_description_unquoted": None,
    "restler_fuzzable_time_zone": gen_restler_fuzzable_time_zone,
    "restler_fuzzable_time_zone_unquoted": None,
    "restler_fuzzable_area": gen_restler_fuzzable_area,
    "restler_fuzzable_area_unquoted": None,
    "restler_fuzzable_location": gen_restler_fuzzable_location,
    "restler_fuzzable_location_unquoted": None,
    "restler_fuzzable_region": gen_restler_fuzzable_region,
    "restler_fuzzable_region_unquoted": None,
    "restler_fuzzable_url": gen_restler_fuzzable_url,
    "restler_fuzzable_url_unquoted": None,
    "restler_fuzzable_language": gen_restler_fuzzable_language,
    "restler_fuzzable_language_unquoted": None,
    "restler_fuzzable_media_type": gen_restler_fuzzable_media_type,
    "restler_fuzzable_media_type_unquoted": None,
    "restler_fuzzable_color": gen_restler_fuzzable_color,
    "restler_fuzzable_color_unquoted": None,
    "restler_fuzzable_email": gen_restler_fuzzable_email,
    "restler_fuzzable_email_unquoted": None,
    "restler_fuzzable_query": gen_restler_fuzzable_query,
    "restler_fuzzable_query_unquoted": None,
    "restler_fuzzable_path": gen_restler_fuzzable_path,
    "restler_fuzzable_path_unquoted": None,
    "restler_fuzzable_domain": gen_restler_fuzzable_domain,
    "restler_fuzzable_domain_unquoted": None,
    "restler_fuzzable_token": gen_restler_fuzzable_token,
    "restler_fuzzable_token_unquoted": None,
    "restler_fuzzable_category": gen_restler_fuzzable_category,
    "restler_fuzzable_category_unquoted": None,
    "restler_fuzzable_ip": gen_restler_fuzzable_ip,
    "restler_fuzzable_ip_unquoted": None,
    "restler_fuzzable_string_datetime": gen_restler_fuzzable_datetime,
    "restler_fuzzable_string_datetime_unquoted": None,
    "restler_fuzzable_string_date": gen_restler_fuzzable_date,
    "restler_fuzzable_string_date_unquoted": None,
    "restler_fuzzable_datetime": None,
    "restler_fuzzable_datetime_unquoted": None,
    "restler_fuzzable_date": None,
    "restler_fuzzable_date_unquoted": None,
    "restler_fuzzable_uuid4": None,
    "restler_fuzzable_uuid4_unquoted": None,
    "restler_fuzzable_int": None,
    "restler_fuzzable_number": None,
    "restler_fuzzable_bool": None,
    "restler_fuzzable_object": None,
    "restler_custom_payload": {
    },
    "restler_custom_payload_unquoted": {
    },
}
